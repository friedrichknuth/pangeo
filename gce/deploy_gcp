#!/usr/bin/env bash

# on GCP
# 0) get a GCP account if you don't already have one
# 1) create a project with a project name of pangeo and note the project id
# 2) switch to the pangeo project
# 3) in APIs and Services enable the Kubernetes Engine API for the pangeo project

# on local computer
# 1) install google cloud sdk (https://cloud.google.com/sdk/downloads)
# 2) install helm >=v2.8.2 (https://github.com/kubernetes/helm/blob/master/docs/install.md)
# 3) setup gcloud sdk
#    - gcloud components update
#    - gcloud components install kubectl
#    - gcloud config set container/new_scopes_behavior true
#    - gcloud config set project $PROJECTID
#    - gcloud auth login

# settings
EMAIL='tjcrone@gmail.com'
PROJECTID='pangeo-198314'
ZONE='us-east4-a'
MIN_NODES=2
MAX_NODES=20

# create cluster on GCP
gcloud container clusters create pangeo --enable-autoscaling --max-nodes=$MAX_NODES --min-nodes=$MIN_NODES --machine-type=n1-standard-2 --zone=$ZONE --no-enable-legacy-authorization --cluster-version=1.9.4-gke.1
gcloud container clusters get-credentials pangeo --zone=$ZONE --project $PROJECTID

# set up kubernetes
kubectl create clusterrolebinding cluster-admin-binding --clusterrole=cluster-admin --user=$EMAIL
kubectl --namespace kube-system create sa tiller
kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller
helm init --service-account tiller
#helm init --wait --service-account tiller
kubectl --namespace=kube-system patch deployment tiller-deploy --type=json --patch='[{"op": "add", "path": "/spec/template/spec/containers/0/command", "value": ["/tiller", "--listen=localhost:44134"]}]'

# get helm repositories
helm repo add jupyterhub https://jupyterhub.github.io/helm-chart/
helm repo update

# wait for tiller to come up
printf "\nWaiting for tiller to come up ..."
test=`helm status 2>&1`
while [[ $test = *"ready tiller"* ]]; do
  test=`helm status 2>&1`
  sleep 1
done
printf " done.\n\n"

# install jupyterhub on the cluster
echo "Installing jupyterhub."
helm install jupyterhub/jupyterhub --version=v0.6.0-9701a90 --name=jupyter --namespace=jupyter -f secret-config.yaml -f jupyter-config_gcp.yaml

# create the kubernetesdask service account and role bindings
kubectl create -f dask-kubernetes-serviceaccount.yaml
